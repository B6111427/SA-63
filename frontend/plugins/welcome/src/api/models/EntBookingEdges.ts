/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntBookingtype,
    EntBookingtypeFromJSON,
    EntBookingtypeFromJSONTyped,
    EntBookingtypeToJSON,
    EntClientEntity,
    EntClientEntityFromJSON,
    EntClientEntityFromJSONTyped,
    EntClientEntityToJSON,
    EntUser,
    EntUserFromJSON,
    EntUserFromJSONTyped,
    EntUserToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntBookingEdges
 */
export interface EntBookingEdges {
    /**
     * 
     * @type {EntBookingtype}
     * @memberof EntBookingEdges
     */
    book?: EntBookingtype;
    /**
     * 
     * @type {EntUser}
     * @memberof EntBookingEdges
     */
    usedby?: EntUser;
    /**
     * 
     * @type {EntClientEntity}
     * @memberof EntBookingEdges
     */
    using?: EntClientEntity;
}

export function EntBookingEdgesFromJSON(json: any): EntBookingEdges {
    return EntBookingEdgesFromJSONTyped(json, false);
}

export function EntBookingEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntBookingEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'book': !exists(json, 'Book') ? undefined : EntBookingtypeFromJSON(json['Book']),
        'usedby': !exists(json, 'Usedby') ? undefined : EntUserFromJSON(json['Usedby']),
        'using': !exists(json, 'Using') ? undefined : EntClientEntityFromJSON(json['Using']),
    };
}

export function EntBookingEdgesToJSON(value?: EntBookingEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'book': EntBookingtypeToJSON(value.book),
        'usedby': EntUserToJSON(value.usedby),
        'using': EntClientEntityToJSON(value.using),
    };
}


