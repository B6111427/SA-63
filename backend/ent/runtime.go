// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/B6111427/app/ent/booking"
	"github.com/B6111427/app/ent/bookingtype"
	"github.com/B6111427/app/ent/cliententity"
	"github.com/B6111427/app/ent/role"
	"github.com/B6111427/app/ent/schema"
	"github.com/B6111427/app/ent/user"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	bookingFields := schema.Booking{}.Fields()
	_ = bookingFields
	// bookingDescBOOKINGDATE is the schema descriptor for BOOKING_DATE field.
	bookingDescBOOKINGDATE := bookingFields[0].Descriptor()
	// booking.DefaultBOOKINGDATE holds the default value on creation for the BOOKING_DATE field.
	booking.DefaultBOOKINGDATE = bookingDescBOOKINGDATE.Default.(func() time.Time)
	// bookingDescTIMELEFT is the schema descriptor for TIME_LEFT field.
	bookingDescTIMELEFT := bookingFields[1].Descriptor()
	// booking.DefaultTIMELEFT holds the default value on creation for the TIME_LEFT field.
	booking.DefaultTIMELEFT = bookingDescTIMELEFT.Default.(func() time.Time)
	bookingtypeFields := schema.Bookingtype{}.Fields()
	_ = bookingtypeFields
	// bookingtypeDescBOOKTYPENAME is the schema descriptor for BOOKTYPE_NAME field.
	bookingtypeDescBOOKTYPENAME := bookingtypeFields[0].Descriptor()
	// bookingtype.BOOKTYPENAMEValidator is a validator for the "BOOKTYPE_NAME" field. It is called by the builders before save.
	bookingtype.BOOKTYPENAMEValidator = bookingtypeDescBOOKTYPENAME.Validators[0].(func(string) error)
	cliententityFields := schema.ClientEntity{}.Fields()
	_ = cliententityFields
	// cliententityDescCLIENTNAME is the schema descriptor for CLIENT_NAME field.
	cliententityDescCLIENTNAME := cliententityFields[0].Descriptor()
	// cliententity.CLIENTNAMEValidator is a validator for the "CLIENT_NAME" field. It is called by the builders before save.
	cliententity.CLIENTNAMEValidator = cliententityDescCLIENTNAME.Validators[0].(func(string) error)
	// cliententityDescCLIENTSTATUS is the schema descriptor for CLIENT_STATUS field.
	cliententityDescCLIENTSTATUS := cliententityFields[1].Descriptor()
	// cliententity.CLIENTSTATUSValidator is a validator for the "CLIENT_STATUS" field. It is called by the builders before save.
	cliententity.CLIENTSTATUSValidator = cliententityDescCLIENTSTATUS.Validators[0].(func(string) error)
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescROLENAME is the schema descriptor for ROLE_NAME field.
	roleDescROLENAME := roleFields[0].Descriptor()
	// role.ROLENAMEValidator is a validator for the "ROLE_NAME" field. It is called by the builders before save.
	role.ROLENAMEValidator = roleDescROLENAME.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUSEREMAIL is the schema descriptor for USER_EMAIL field.
	userDescUSEREMAIL := userFields[0].Descriptor()
	// user.USEREMAILValidator is a validator for the "USER_EMAIL" field. It is called by the builders before save.
	user.USEREMAILValidator = userDescUSEREMAIL.Validators[0].(func(string) error)
	// userDescUSERNAME is the schema descriptor for USER_NAME field.
	userDescUSERNAME := userFields[1].Descriptor()
	// user.USERNAMEValidator is a validator for the "USER_NAME" field. It is called by the builders before save.
	user.USERNAMEValidator = userDescUSERNAME.Validators[0].(func(string) error)
}
