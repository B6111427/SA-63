// Code generated by entc, DO NOT EDIT.

package bookingtype

const (
	// Label holds the string label denoting the bookingtype type in the database.
	Label = "bookingtype"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldBOOKTYPENAME holds the string denoting the booktype_name field in the database.
	FieldBOOKTYPENAME = "booktype_name"

	// EdgeBooktype holds the string denoting the booktype edge name in mutations.
	EdgeBooktype = "booktype"

	// Table holds the table name of the bookingtype in the database.
	Table = "bookingtypes"
	// BooktypeTable is the table the holds the booktype relation/edge.
	BooktypeTable = "bookings"
	// BooktypeInverseTable is the table name for the Booking entity.
	// It exists in this package in order to avoid circular dependency with the "booking" package.
	BooktypeInverseTable = "bookings"
	// BooktypeColumn is the table column denoting the booktype relation/edge.
	BooktypeColumn = "BOOKINGTYPE_ID"
)

// Columns holds all SQL columns for bookingtype fields.
var Columns = []string{
	FieldID,
	FieldBOOKTYPENAME,
}

var (
	// BOOKTYPENAMEValidator is a validator for the "BOOKTYPE_NAME" field. It is called by the builders before save.
	BOOKTYPENAMEValidator func(string) error
)
